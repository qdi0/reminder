{"ast":null,"code":"var _jsxFileName = \"/Users/as/Desktop/newapp/front/src/comportnets/Reminder.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Sidebar, Header, TaskList } from './index';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Reminder = () => {\n  _s();\n\n  const [data, setData] = useState(['']);\n  const [toggelMenu, setToggelMenu] = useState(false);\n  const [isSendPost, setIsSendPost] = use;\n  useEffect(() => {\n    const getDatas = async () => {\n      const response = await axios.get('/api');\n      console.log(response);\n      setData(response.data);\n    };\n\n    getDatas();\n  }, []);\n\n  const toggleMenuButton = () => {\n    setToggelMenu(prevState => {\n      return !prevState;\n    });\n    console.log(toggelMenu);\n  }; // const titles = ['title','title2','title3','title3','title4'];\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      toggleMenuButton: toggleMenuButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n      title: data,\n      checked: toggelMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      data: data,\n      checked: toggelMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Reminder, \"AJI+TwO9+5ZOKUiyy0T/h5Sznws=\");\n\n_c = Reminder;\nexport default Reminder;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reminder\");","map":{"version":3,"names":["useEffect","useState","Sidebar","Header","TaskList","axios","Reminder","data","setData","toggelMenu","setToggelMenu","isSendPost","setIsSendPost","use","getDatas","response","get","console","log","toggleMenuButton","prevState"],"sources":["/Users/as/Desktop/newapp/front/src/comportnets/Reminder.jsx"],"sourcesContent":["import { useEffect,useState } from 'react';\nimport {Sidebar,Header,TaskList} from './index'\nimport axios from 'axios';\n\nconst Reminder = () =>{\n  const[data,setData] = useState(['']);\n  const[toggelMenu,setToggelMenu] = useState(false);\n  const[isSendPost,setIsSendPost] = use\n  useEffect(()=>{\n    const getDatas = async ()=>{\n      const response = await axios.get('/api');\n      console.log(response)\n      setData(response.data)\n    }\n    getDatas()\n  },[])\n\n  const toggleMenuButton = () =>{\n    setToggelMenu((prevState)=>{\n      return !prevState\n    })\n    console.log(toggelMenu)\n  }\n\n  // const titles = ['title','title2','title3','title3','title4'];\n\n  return(\n    <>\n    <Header toggleMenuButton={toggleMenuButton}/>\n    <Sidebar title={data} checked={toggelMenu}/>\n    <TaskList data={data} checked={toggelMenu}/>\n    </>\n  )\n}\n\nexport default Reminder;"],"mappings":";;;AAAA,SAASA,SAAT,EAAmBC,QAAnB,QAAmC,OAAnC;AACA,SAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,QAAvB,QAAsC,SAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,QAAQ,GAAG,MAAK;EAAA;;EACpB,MAAK,CAACC,IAAD,EAAMC,OAAN,IAAiBP,QAAQ,CAAC,CAAC,EAAD,CAAD,CAA9B;EACA,MAAK,CAACQ,UAAD,EAAYC,aAAZ,IAA6BT,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAK,CAACU,UAAD,EAAYC,aAAZ,IAA6BC,GAAlC;EACAb,SAAS,CAAC,MAAI;IACZ,MAAMc,QAAQ,GAAG,YAAU;MACzB,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAU,MAAV,CAAvB;MACAC,OAAO,CAACC,GAAR,CAAYH,QAAZ;MACAP,OAAO,CAACO,QAAQ,CAACR,IAAV,CAAP;IACD,CAJD;;IAKAO,QAAQ;EACT,CAPQ,EAOP,EAPO,CAAT;;EASA,MAAMK,gBAAgB,GAAG,MAAK;IAC5BT,aAAa,CAAEU,SAAD,IAAa;MACzB,OAAO,CAACA,SAAR;IACD,CAFY,CAAb;IAGAH,OAAO,CAACC,GAAR,CAAYT,UAAZ;EACD,CALD,CAboB,CAoBpB;;;EAEA,oBACE;IAAA,wBACA,QAAC,MAAD;MAAQ,gBAAgB,EAAEU;IAA1B;MAAA;MAAA;MAAA;IAAA,QADA,eAEA,QAAC,OAAD;MAAS,KAAK,EAAEZ,IAAhB;MAAsB,OAAO,EAAEE;IAA/B;MAAA;MAAA;MAAA;IAAA,QAFA,eAGA,QAAC,QAAD;MAAU,IAAI,EAAEF,IAAhB;MAAsB,OAAO,EAAEE;IAA/B;MAAA;MAAA;MAAA;IAAA,QAHA;EAAA,gBADF;AAOD,CA7BD;;GAAMH,Q;;KAAAA,Q;AA+BN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}